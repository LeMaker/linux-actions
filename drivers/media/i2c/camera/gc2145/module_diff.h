/*
 * module different macro
 *
 * Copyright (C) 2008 Renesas Solutions Corp.
 * Kuninori Morimoto <morimoto.kuninori@renesas.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __MODULE_DIFF_H__
#define __MODULE_DIFF_H__

#include "./../module_comm/module_comm.h"

#define CAMERA_MODULE_NAME 		"gc2145"
#define CAMERA_MODULE_PID			0x2145
#define VERSION(pid, ver) 		((pid<<8)|(ver&0xFF))

#define MODULE_PLATFORM_ID		GC2145_PLATFORM_ID
#define MODULE_I2C_REAL_ADDRESS		(0x78>>1)
#define MODULE_I2C_REG_ADDRESS		(0x78>>1)
#define I2C_REGS_WIDTH			1
#define I2C_DATA_WIDTH			1

#define PIDH					0xf0 /* Product ID Number H byte */
#define PIDL					0xf1 /* Product ID Number L byte */
#define OUTTO_SENSO_CLOCK 		24000000

#define DEFAULT_VSYNC_ACTIVE_LEVEL		V4L2_MBUS_VSYNC_ACTIVE_HIGH
#define DEFAULT_HSYNC_ACTIVE_LEVEL		V4L2_MBUS_HSYNC_ACTIVE_HIGH
#define DEFAULT_PCLK_SAMPLE_EDGE        V4L2_MBUS_PCLK_SAMPLE_RISING
#define DEFAULT_POWER_LINE_FREQUENCY	V4L2_CID_POWER_LINE_FREQUENCY_50HZ

#define MODULE_DEFAULT_WIDTH	WIDTH_SVGA
#define MODULE_DEFAULT_HEIGHT	HEIGHT_SVGA
#define MODULE_MAX_WIDTH		WIDTH_UXGA
#define MODULE_MAX_HEIGHT		HEIGHT_UXGA

#define AHEAD_LINE_NUM			15    //10行 = 50次循环
#define DROP_NUM_CAPTURE		2
#define DROP_NUM_PREVIEW		5

//static unsigned int frame_rate_vga[]  = {30,};
static unsigned int frame_rate_svga[] = {30,};
static unsigned int frame_rate_720p[] = {30,};
static unsigned int frame_rate_uxga[] = {15,};

/*
 * register setting for window size 800*600
 */
static const struct regval_list module_init_regs[] =
{
    	/////////////p sub
	//////// gain 8.8x
	/////////a gain 4x
	/////////d gain 2.2x
	{0xfe,0xf0},
	{0xfe,0xf0},
	{0xfe,0xf0},
	  
	{0xfc,0x06},
	{0xf6,0x00},
		
	{0xf7,0x1d}, //37 //17 //37 //1d//05
	{0xf8,0x84}, //87 //83 //82
	{0xfa,0x00},
	{0xf9,0xfe}, //ff
	{0xfd,0x00},
	{0xc2,0x00},
	{0xf2,0x0f},
	//////////////////////////////////////////////////////
	////////////////////  Analog & Cisctl ////////////////
	//////////////////////////////////////////////////////
	{0xfe,0x00},
		
	{0x03,0x04}, //exp time
	{0x04,0x00}, //exp time
		
	{0x05,0x01}, //00 //hb[11:8]
	{0x06,0x68}, //0b //hb
		
	{0x09,0x00}, //row start
	{0x0a,0x00}, //
	{0x0b,0x00}, //col start
	{0x0c,0x00},
	{0x0d,0x04}, //height
	{0x0e,0xc0},
	{0x0f,0x06}, //width
	{0x10,0x52},
		
	{0x12,0x2e}, //sh_delay 太短 YUV出图异常
	{0x17,0x14}, //CISCTL Mode1 [1:0]mirror flip
	{0x18,0x22}, //sdark mode
	{0x19,0x0e}, //0f// AD pipe number
	{0x1a,0x01}, //AD manual switch mode
	   
	{0x1b,0x4b}, //48 restg Width,SH width
	{0x1c,0x07}, //06  帧率快后，横条纹 //12 //TX Width,Space Width
	{0x1d,0x10}, //double reset
	{0x1e,0x88},//90//98 //fix	竖线//Analog Mode1,TX high,Coln_r
	{0x1f,0x78}, //78 //38 //18 //Analog Mode2,txlow
	{0x20,0x03}, //07 //Analog Mode3,comv,ad_clk mode
	{0x21,0x40},//10//20//40 //fix 灯管横条纹
	{0x22,0xf0},//d0//f0 //a2 //Vref vpix  FPN严重
	{0x24,0x16}, //Pad drv
	{0x25,0x01}, //col sel
	{0x26,0x10}, //Analog PGA gain1
	{0x2d,0x60},//40//40 //txl drv mode
	{0x30,0x01}, //Analog Mode4 
	{0x31,0x90},//b0//70 // Analog Mode7 [7:5]rsgh_r灯管横条纹[4:3]isp_g
	{0x33,0x06},//03//02//01 //EQ_hstart_width
	{0x34,0x01},
	//
	///////////////////////////////////////////////////
	////////////////////  ISP reg  //////////////////////
	//////////////////////////////////////////////////////
	{0x80,0x7f},//ff //outdoor gamma_en, GAMMA_en, CC_en, EE_en, INTP_en, DN_en, DD_en,LSC_en
	{0x81,0x26},//24 //BLK dither mode, ll_y_en ,skin_en, edge SA, new_skin_mode, autogray_en,ll_gamma_en,BFF test image
	{0x82,0xfa}, //FA //auto_SA, auto_EE, auto_DN, auto_DD, auto_LSC, ABS_en, AWB_en, NA
	{0x83,0x00}, //special_effect
	{0x84,0x02}, //output format
	{0x86,0x03}, //c2 //46 //c2 //sync mode
	{0x88,0x03}, //[1]ctl_auto_gating [0]out_auto_gating
	{0x89,0x03}, //bypass disable
	{0x85,0x04}, //30 //60//frame start cut
	{0x8a,0x00}, //ISP_quiet_mode,close aaa pclk,BLK gate mode,exception,close first pipe clock,close dndd clock,close intp clock,DIV_gatedclk_en
	{0x8b,0x00}, //[7:6]BFF_gate_mode,[5]BLK switch gain,[4]protect exp,[3:2]pipe gate mode,[1]not split sram,[0]dark current update
		
	{0xb0,0x55},//60 //global gain
	{0xc3,0x00}, //[7:4]auto_exp_gamma_th1[11:8],[3:0]auto_exp_gamma_th2[11:8]
	{0xc4,0x80}, //auto_exp_gamma_th1[7:0] into 
	{0xc5,0x90}, //auto_exp_gamma_th2[7:0] out //outdoor gamma
	{0xc6,0x3b},//38 //auto_gamma_th1 
	{0xc7,0x46},//40 //auto_gamma_th2
		
	{0xec,0x06},  //measure window
	{0xed,0x04},
	{0xee,0x60}, //16  col
	{0xef,0x90}, //8  row
		
	{0xb6,0x01}, //[0]aec en
		 
	{0x90,0x01}, //crop
	{0x91,0x00},
	{0x92,0x00},
	{0x93,0x00},
	{0x94,0x00}, //08
	{0x95,0x04},
	{0x96,0xb0},
	{0x97,0x06},
	{0x98,0x40},
	
	///////////////////////////////////////////////
	///////////  BLK ////////////////////////
	///////////////////////////////////////////////
	{0x40,0x42}, //2b //27
	{0x41,0x00}, //80 //dark row sel
	{0x43,0x58}, //54 //[7:4]BLK start not smooth  [3:0]output start frame
	   
	{0x5e,0x00},//00//10 //18
	{0x5f,0x00},//00//10 //18
	{0x60,0x00},//00//10 //18
	{0x61,0x00},//00///10 //18
	{0x62,0x00},//00//10 //18
	{0x63,0x00},//00//10 //18
	{0x64,0x00},//00/10 //18
	{0x65,0x00},//00//10 //18
	{0x66,0x20},//24//1e
	{0x67,0x20},//24//1e 
	{0x68,0x20},//24//1e 
	{0x69,0x20},//24//1e
		
	{0x76,0x00},//0f
	   
	{0x6a,0x00},//04//06
	{0x6b,0x00},//04//06
	{0x6c,0x3e},//04//06
	{0x6d,0x3e},//04//06
	{0x6e,0x3f},//04//06
	{0x6f,0x3f},//04//06
	{0x70,0x00},//04//06
	{0x71,0x00},//04//06 //manual offset
		
	{0x76,0x00},//1f//add offset
	{0x72,0xf0}, //[7:4]BLK DD th [3:0]BLK various th
	{0x7e,0x3c}, //ndark
	{0x7f,0x00}, 
	   
	{0xfe,0x02},
	{0x48,0x15},
	{0x49,0x00},//04//04 //ASDE OFFSET SLOPE 
	{0x4b,0x0b}, //ASDE y OFFSET SLOPE
	{0xfe,0x00},
	
	///////////////////////////////////////////////
	/////////// AEC ////////////////////////
	///////////////////////////////////////////////
	{0xfe,0x01},
	   
	{0x01,0x04}, //AEC X1
	{0x02,0xc0}, //AEC X2
	{0x03,0x04}, //AEC Y1
	{0x04,0x90}, //AEC Y2
	{0x05,0x30}, //20 //AEC center X1
	{0x06,0x90}, //40 //AEC center X2
	{0x07,0x30}, //30 //AEC center Y1
	{0x08,0x80}, //60 //AEC center Y2
	{0x09,0x00}, //AEC show mode
	{0x0a,0x82},//c2 //[7]col gain enable
	{0x0b,0x11}, //AEC every N
	{0x0c,0x10}, //AEC_mode3 center weight 
	{0x11,0x10},//
	{0x13,0x30},//75//30//2a //AEC Y target
	{0x17,0x00}, //AEC ignore mode
	{0x1c,0x11}, //
	{0x1e,0x61}, //
	{0x1f,0x35},//30//40//50 //max pre gain
	{0x20,0x40},//60//40 //max post gain
	{0x22,0x40},//80 //AEC outdoor THD
	{0x23,0x20}, //target_Y_low_limit
	{0xfe,0x02},
	{0x0f,0x04},//05//04//05  
	{0xfe,0x01},
		
	{0x12,0x35}, //35 //[5:4]group_size [3]slope_disable [2]outdoor_enable [0]histogram_enable
	{0x15,0xb0}, //target_Y_high_limit
	{0x10,0x31}, //num_thd_high
	{0x3e,0x28}, //num_thd_low
	{0x3f,0xb0}, //luma_thd
	{0x40,0x90}, //luma_slope
	{0x41,0x0f}, //color_diff
	
	/////////////////////////////
	//////// INTPEE /////////////
	/////////////////////////////
	{0xfe,0x02}, //page2
	{0x90,0x6c}, //ac //eeintp mode1
	{0x91,0x03},//02 ////eeintp mode2
	{0x92,0xcb},//64//c8//44 //low criteria for direction
	{0x94,0x33},//66
	{0x95,0x84},//b5
	{0x97,0x65},//78 ////edge effect
	{0xa2,0x11}, //fix direction
	{0xfe,0x00},
	
	/////////////////////////////
	//////// DNDD///////////////
	/////////////////////////////
	{0xfe,0x02},
	{0x80,0xc1}, //c1 //[7]share mode [6]skin mode	[5]is 5x5 mode [1:0]noise value select 0:2	1:2.5  2:3	3:4
	{0x81,0x08}, //
	{0x82,0x05},//08 //signal a 0.6
	{0x83,0x08},//05//04 //signal b 2.5
		 
	{0x84,0x0a}, //10 //05 dark_DD_TH
	{0x86,0xf0}, //a0 Y_value_dd_th2
	{0x87,0x50}, //90 Y_value_dd_th3
	{0x88,0x15}, //60 Y_value_dd_th4
		
	{0x89,0x50}, //80  // asde th2
	{0x8a,0x30}, //60  // asde th3
	{0x8b,0x10}, //30  // asde th4
	
	/////////////////////////////////////////////////
	///////////// ASDE ////////////////////////
	/////////////////////////////////////////////////
	{0xfe,0x01}, //page 1
	{0x21,0x04}, //14//luma_value_div_sel(分频，与0xef呈2倍关系，增大1，0xef的值减小1倍)
	//{0xef  luma_value read_only
	
	{0xfe,0x02}, //page2
	{0xa3,0x50},//40 //ASDE_low_luma_value_LSC_th_H
	{0xa4,0x20}, //ASDE_low_luma_value_LSC_th_L
		
	{0xa5,0x40}, //80 //ASDE_LSC_gain_dec_slope_H
	{0xa6,0x80}, // 80 //ASDE_LSC_gain_dec_slope_L
	//{0xa7  ASDE_LSC_gain_dec	//read only
	
	{0xab,0x40},//50 //ASDE_low_luma_value_OT_th 
		
	{0xae,0x0c}, //[3]EE1_effect_inc_or_dec_high,[2]EE2_effect_inc_or_dec_high,
				 //[1]EE1_effect_inc_or_dec_low,[0]EE2_effect_inc_or_dec_low,  1:inc  0:dec
			   
	{0xb3,0x46},//34//44 //ASDE_EE1_effect_slope_low,ASDE_EE2_effect_slope_low
	{0xb4,0x64},//44 //12 //ASDE_EE1_effect_slope_high,ASDE_EE2_effect_slope_high
		 
	{0xb6,0x38},//40//40 //ASDE_auto_saturation_dec_slope 
	{0xb7,0x02},//04 //ASDE_sub_saturation_slope
	{0xb9,0x28},//32 //[7:0]ASDE_auto_saturation_low_limit
	{0x3c,0x08},//[3:0]auto gray_dec_slope
	{0x3d,0x20},//30//[7:0]auto gray_dec_th
		
	{0x4b,0x08},//0d//y offset slope
	{0x4c,0x20},//y offset limit
	{0xfe,0x00},
	///////////////////gamma1////////////////////
	////Gamma
	
	{0xfe,0x02},
	{0x10,0x09},//10
	{0x11,0x0d},//15
	{0x12,0x13},//1a
	{0x13,0x19},//1f
	{0x14,0x27},//2c
	{0x15,0x37},//39
	{0x16,0x45},//45
	{0x17,0x53},//54
	{0x18,0x69},
	{0x19,0x7d},
	{0x1a,0x8f},
	{0x1b,0x9d},
	{0x1c,0xa9},
	{0x1d,0xbd},
	{0x1e,0xcd},
	{0x1f,0xd9},
	{0x20,0xe3},
	{0x21,0xea},
	{0x22,0xef},
	{0x23,0xf5},
	{0x24,0xf9},
	{0x25,0xff},
	
	//{0xfe,0x02},
	//{0x10,0x0a},
	//{0x11,0x12},
	//{0x12,0x19},
	//{0x13,0x1f},
	//{0x14,0x2c},
	//{0x15,0x38},
	//{0x16,0x42},
	//{0x17,0x4e},
	//{0x18,0x63},
	//{0x19,0x76},
	//{0x1a,0x87},
	//{0x1b,0x96},
	//{0x1c,0xa2},
	//{0x1d,0xb8},
	//{0x1e,0xcb},
	//{0x1f,0xd8},
	//{0x20,0xe2},
	//{0x21,0xe9},
	//{0x22,0xf0},
	//{0x23,0xf8},
	//{0x24,0xfd},
	//{0x25,0xff},
	//{0xfe,0x00},
	{0xc6,0x20},//20//40//auto gammath1
	{0xc7,0x2b},//2b//50//auto gammath2
	/////auto gamma dark/////
	{0xfe,0x02},
	{0x26,0x0f},
	{0x27,0x14},
	{0x28,0x19},
	{0x29,0x1e},
	{0x2a,0x27},
	{0x2b,0x33},
	{0x2c,0x3b},
	{0x2d,0x45},
	{0x2e,0x59},
	{0x2f,0x69},
	{0x30,0x7c},
	{0x31,0x89},
	{0x32,0x98},
	{0x33,0xae},
	{0x34,0xc0},
	{0x35,0xcf},
	{0x36,0xda},
	{0x37,0xe2},
	{0x38,0xe9},
	{0x39,0xf3},
	{0x3a,0xf9},
	{0x3b,0xff},
	///////////////////gamma2////////////////////
	////Gamma outdoor
	//{0xfe,0x02},
	//{0x26,0x17},
	//{0x27,0x18},
	//{0x28,0x1c},
	//{0x29,0x20},
	//{0x2a,0x28},
	//{0x2b,0x34},
	//{0x2c,0x40},
	//{0x2d,0x49},
	//{0x2e,0x5b},
	//{0x2f,0x6d},
	//{0x30,0x7d},
	//{0x31,0x89},
	//{0x32,0x97},
	//{0x33,0xac},
	//{0x34,0xc0},
	//{0x35,0xcf},
	//{0x36,0xda},
	//{0x37,0xe5},
	//{0x38,0xec},
	//{0x39,0xf8},
	//{0x3a,0xfd},
	//{0x3b,0xff},
	
	/////////////////////////////////////////////// 	 
	///////////   YCP		///////////////////////  
	///////////////////////////////////////////////  
	{0xfe,0x02},
	{0xd1,0x32}, // 
	{0xd2,0x32}, //
	{0xd3,0x40},//45
	{0xd6,0xf0},
	{0xd7,0x10},
	{0xd8,0xda},
	{0xdd,0x14}, //edge sa
	{0xde,0x86}, //asde auto gray
	{0xed,0x81},//01//
	{0xee,0x3f},//2b//28
	{0xef,0x3f},//3b//38 
	{0xd8,0xd8},//autogray protecy
	///////////////abs////////////
	{0xfe,0x01},
	{0x9f,0x40},
	
	////////////////////////////
	//////// LSC  ///////////////
	////////////////////////////
	{0xfe,0x01},
	{0xc2,0x14},
	{0xc3,0x0d},
	{0xc4,0x0c},
	{0xc8,0x15},
	{0xc9,0x11},
	{0xca,0x0a},
	{0xbc,0x24},
	{0xbd,0x15},
	{0xbe,0x0b},
	{0xb6,0x25},
	{0xb7,0x1b},
	{0xb8,0x15},
	{0xc5,0x00},
	{0xc6,0x00},
	{0xc7,0x00},
	{0xcb,0x00},
	{0xcc,0x00},
	{0xcd,0x00},
	{0xbf,0x07},
	{0xc0,0x00},
	{0xc1,0x00},
	{0xb9,0x00},
	{0xba,0x00},
	{0xbb,0x00},
	{0xaa,0x01},
	{0xab,0x01},
	{0xac,0x00},
	{0xad,0x05},
	{0xae,0x06},
	{0xaf,0x0e},
	{0xb0,0x0b},
	{0xb1,0x07},
	{0xb2,0x06},
	{0xb3,0x17},
	{0xb4,0x0e},
	{0xb5,0x0e},
	{0xd0,0x09},
	{0xd1,0x00},
	{0xd2,0x00},
	{0xd6,0x08},
	{0xd7,0x00},
	{0xd8,0x00},
	{0xd9,0x00},
	{0xda,0x00},
	{0xdb,0x00},
	{0xd3,0x0a},
	{0xd4,0x00},
	{0xd5,0x00},
	{0xa4,0x00},
	{0xa5,0x00},
	{0xa6,0x77},
	{0xa7,0x77},
	{0xa8,0x77},
	{0xa9,0x77},
	{0xa1,0x80},
	{0xa2,0x80},
		
	{0xfe,0x01},
	{0xdf,0x0d},//01//0c
	{0xdc,0x25},//80
	{0xdd,0x50},//30
	{0xe0,0x77},
	{0xe1,0x80},
	{0xe2,0x77},
	{0xe3,0x90},
	{0xe6,0x90},
	{0xe7,0xa0},
	{0xe8,0x90},
	{0xe9,0xa0},
	   
	{0xfe,0x00},
	
	/////////////////////////////////////////////////
	/////////////	 AWB	 ////////////////////////
	/////////////////////////////////////////////////
	{0xfe,0x01},
	{0x4f,0x00},
	{0x4f,0x00},
	{0x4b,0x01},
	{0x4f,0x00},
								 
	{0x4c,0x01}, // D75
	{0x4d,0x71},
	{0x4e,0x01},
	{0x4c,0x01},
	{0x4d,0x91},
	{0x4e,0x01},
	{0x4c,0x01},
	{0x4d,0x70},
	{0x4e,0x01},
		
	{0x4c,0x01}, // D65
	{0x4d,0x90},
	{0x4e,0x02},									
									
	{0x4c,0x01},
	{0x4d,0xb0},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0x8f},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0x6f},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0xaf},
	{0x4e,0x02},
		 
	{0x4c,0x01},
	{0x4d,0xd0},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0xf0},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0xcf},
	{0x4e,0x02},
	{0x4c,0x01},
	{0x4d,0xef},
	{0x4e,0x02},
	   
	{0x4c,0x01},//D50
	{0x4d,0x6e},
	{0x4e,0x03},
	{0x4c,0x01}, 
	{0x4d,0x8e},
	{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0xae},
	{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xce},
	{0x4e,0x03},//03
	//{0x4c,0x01},
	//{0x4d,0xcf},
	//{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xee},
	{0x4e,0x03},//03
		 
	{0x4c,0x01},
	{0x4d,0x6d},
	{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0x8d},
	{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0xad},
	{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xcd},
	{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xed},
	{0x4e,0x03},//03
	   
	{0x4c,0x01},
	{0x4d,0x6c},
	{0x4e,0x03},
	//{0x4c,0x01},
	//{0x4d,0xed},
	//{0x4e,0x03},//skin
	{0x4c,0x01},
	{0x4d,0x8c},
	{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0xac},
	{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xcc},
	{0x4e,0x03},//03
	{0x4c,0x01},
	{0x4d,0xec},
	{0x4e,0x03},//05	//03/////////////////////////////
	{0x4c,0x01},
	{0x4d,0x6b},
	{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0x8b},
	{0x4e,0x03},//skin
	//{0x4c,0x01},
	//{0x4d,0xab},
	//{0x4e,0x03},
	//{0x4c,0x01},
	//{0x4d,0xcb},
	//{0x4e,0x03},
	//{0x4c,0x01},
	//{0x4d,0xeb},
	//{0x4e,0x03},
	{0x4c,0x01},
	{0x4d,0x8a},
	{0x4e,0x03},
	
	
	//{0x4c,0x02},
	//{0x4d,0x2b},
	//{0x4e,0x03},
	//{0x4c,0x02},
	//{0x4d,0x4b},
	//{0x4e,0x03},
	
	{0x4c,0x01}, // CWF
	{0x4d,0xaa},
	{0x4e,0x04},
	{0x4c,0x01}, // CWF
	{0x4d,0xab},
	{0x4e,0x04},
	{0x4c,0x01}, // CWF
	{0x4d,0xcb},
	{0x4e,0x04},
	{0x4c,0x01}, // CWF
	{0x4d,0xa9},
	{0x4e,0x04},
								  
	{0x4c,0x01},
	{0x4d,0xca},
	{0x4e,0x04},
	{0x4c,0x01},
	{0x4d,0xc9},
	{0x4e,0x04},
	{0x4c,0x01},
	{0x4d,0x8a},
	{0x4e,0x04},
	{0x4c,0x01},
	{0x4d,0x89},
	{0x4e,0x04},
	   
	{0x4c,0x01}, // TL84
	{0x4d,0xeb},
	{0x4e,0x05},
	{0x4c,0x02},
	{0x4d,0x0b},
	{0x4e,0x05},
	{0x4c,0x02},
	{0x4d,0x0c},
	{0x4e,0x05},
	{0x4c,0x02},
	{0x4d,0x2c},
	{0x4e,0x05},
	{0x4c,0x02},
	{0x4d,0x2b},
	{0x4e,0x05},
	{0x4c,0x01},
	{0x4d,0xea},
	{0x4e,0x05},	//05/////////////////////////
	{0x4c,0x02},
	{0x4d,0x0a},/////////wtoffice
	{0x4e,0x05},   
		
	{0x4c,0x02},
	{0x4d,0x8b},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x2a},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x4a},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x6a},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x8a},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0xaa},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x09},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x29},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x49},
	{0x4e,0x06},
	{0x4c,0x02},
	{0x4d,0x69},
	{0x4e,0x06},
	 {0x4c,0x02}, // H
	{0x4d,0xcc},
	{0x4e,0x07},
	{0x4c,0x02},
	{0x4d,0xca},
	{0x4e,0x07},
	{0x4c,0x02},
	{0x4d,0xa9},
	{0x4e,0x07},
	{0x4c,0x02},
	{0x4d,0xc9},
	{0x4e,0x07},
	{0x4c,0x02},
	{0x4d,0xe9},
	{0x4e,0x07},
		
	{0x4f,0x01}, 
	{0x4f,0x01},
	{0x50,0x80}, //AWB_PRE_mode
	{0x51,0xa8}, //AWB_pre_THD_min[7:0]
	{0x52,0x47},//57 //AWB_pre_THD_min[15:8] Dominiate luma 0.25=639c 0.22=57a8
	{0x53,0x38}, //AWB_pre_THD_min_MIX[7:0]
	{0x54,0xc7}, //AWB_pre_THD_min_MIX[15:8] Mix luma 0.5
		 
	{0x56,0x0e}, //AWB_tone mode
	{0x58,0x08}, //AWB_C_num_sel,AWB_D_num_sel
	{0x5b,0x00}, //AWB_mix_mode 
		
	{0x5c,0x74}, //green_num0[7:0]
	{0x5d,0x8b}, //green_num0[15:8] 0.35
		
	{0x61,0xdb},//a8 //R2G_stand0	OUT BA c0
	{0x62,0xb8},//b8 //B2G_stand0		B6	c2
	{0x63,0x86},//aa//00//88//a4 //AWB gray mode [7]enable
	{0x64,0xc0},//80
	{0x65,0x04}, //AWB margin
		
	{0x67,0xa8}, //R2G_stand3[7:0]	FF/CWF
	{0x68,0xb0}, //B2G_stand3[7:0]
	{0x69,0x00}, //R2G_stand4[9:8] B2G_stand4[9:8] R2G_stand3[9:8] B2G_stand3[9:8]
	{0x6a,0xa8}, //R2G_stand4[7:0]	TL84/TL84&CWF
	{0x6b,0xb0}, //B2G_stand4[7:0]
	{0x6c,0xaf}, //R2G_stand5[7:0]	A
	{0x6d,0x8b}, //B2G_stand5[7:0]
	{0x6e,0x50}, //AWB_skin_weight R2G_stand5[9:8] B2G_stand5[9:8]
	{0x6f,0x18}, //AWB_indoor_THD (0x21=17 caculate)
	{0x73,0xf0},//e0//0f //AWB_indoor_mode
	   
	{0x70,0x0d},//10 //AWB low luma TH
	{0x71,0x68},//e8 //AWB outdoor TH
	{0x72,0x81},//c1//c0 //outdoor mode
	{0x74,0x01}, //[2:0]AWB skip mode 2x2,4x4,4x8,8x8
	{0x75,0x01}, //[1:0]AWB_every_N
	{0x7f,0x0c},//08 //[3]gray world frame start
		 
	{0x76,0x70}, //R limit
	{0x77,0x58}, //G limit
	{0x78,0xa0}, //d8 //B limit
	{0x79,0x5e},//53
	{0x7a,0x54},
	{0x7b,0x55},
		
	{0xfe,0x00},
	//
	//////////////////////////////////////////
	///////////  CC   ////////////////////////
	//////////////////////////////////////////
	{0xfe,0x02},
	{0xc0,0x01}, //[5:4] CC mode [0]CCT enable
	   
	{0xC1,0x48},//44//50 //D50/D65
	{0xc2,0xF8},//F4
	{0xc3,0x04},//02 //0
	{0xc4,0xF0},//f2//e8 //e0
	{0xc5,0x4B},//44//48
	{0xc6,0xFD},//f8//f0
	   
	   
	{0xC7,0x50},
	{0xc8,0xf2},
	{0xc9,0x00},
	{0xcA,0xE0},
	{0xcB,0x45},
	{0xcC,0xec},
		
	{0xCd,0x48},//45
	{0xce,0xf0},
	{0xcf,0xf0},//00
	{0xe3,0x0c},
	{0xe4,0x4b},
	{0xe5,0xe0},
		  
	{0xfe,0x00},
		
	{0xf2,0x0f},
	
	
	//////////////frame rate   50Hz
	{0xfe,0x00},
	{0xf7,0x1d},
	{0xf8,0x84},
	   
	{0x03,0x04},
	{0x04,0xe2},
	{0x05,0x01},//hb
	{0x06,0x56},
	{0x07,0x00},//Vb
	{0x08,0x14},
		
	{0xfe,0x01},
		
	{0x25,0x00},
	{0x26,0xfa}, //step
	{0x27,0x05}, //20fps
	{0x28,0xdc},
	{0x29,0x07}, //16.7fps
	{0x2a,0xd0},
	{0x2b,0x0b},//07 //12.5fps
	{0x2c,0xb8},//d0
	{0x2d,0x0b}, //night mode 8.3fps
	{0x2e,0xb8},
	{0xfe,0x00},
	
	
	/////////dark  sun//////  
	{0xfe,0x02},
	{0x40,0xbf},
	{0x46,0xcf},
	{0xfe,0x00},
		ENDMARKER,
};

/* 800*600: SVGA*/
static const struct regval_list module_svga_regs[] = {
    {0xfe , 0x00},
    {0xfa , 0x00},
    {0xfd , 0x01}, 
    //// crop window              
    {0xfe , 0x00},
    {0x99 , 0x11},  
    {0x9a , 0x06},
    {0x9b , 0x00},
    {0x9c , 0x00},
    {0x9d , 0x00},
    {0x9e , 0x00},
    {0x9f , 0x00},
    {0xa0 , 0x00},  
    {0xa1 , 0x00},
    {0xa2  ,0x00},
    {0x90 , 0x01}, 
    {0x91 , 0x00},
    {0x92 , 0x00},
    {0x93 , 0x00},
    {0x94 , 0x00},
    {0x95 , 0x02},
    {0x96 , 0x58},
    {0x97 , 0x03},
    {0x98 , 0x20},

    //// AWB                      
    {0xfe , 0x00},
    {0xec , 0x01}, 
    {0xed , 0x02},
    {0xee , 0x30},
    {0xef , 0x48},
    {0xfe , 0x01},
    {0x74 , 0x00}, 
    //// AEC                      
    {0xfe , 0x01},
    {0x01 , 0x04},
    {0x02 , 0x60},
    {0x03 , 0x02},
    {0x04 , 0x48},
    {0x05 , 0x18},
    {0x06 , 0x4c},
    {0x07 , 0x14},
    {0x08 , 0x36},
    {0x0a , 0xc0}, 
    {0x21 , 0x14},
    {0xfe , 0x00},
	ENDMARKER,
};
#if 0
/* 640*480: VGA*/
static const struct regval_list module_vga_regs[] = {
	ENDMARKER,
};
#endif

/* 1280*720: 720P*/
static const struct regval_list module_720p_regs[] = {
	{0xfe , 0x00},
	//{0xfa , 0x11},
	{0xb6 , 0x01},
	{0xfd , 0x00},
	//// crop window
	{0xfe , 0x00},
	{0x99 , 0x55},	
	{0x9a , 0x06},
	{0x9b , 0x00},
	{0x9c , 0x00},
	{0x9d , 0x01},
	{0x9e , 0x23},
	{0x9f , 0x00},
	{0xa0 , 0x00},	
	{0xa1 , 0x01},
	{0xa2  ,0x23},
	
	{0x90 , 0x01},
	{0x91 , 0x00},
	{0x92 , 0x78},
	{0x93 , 0x00},
	{0x94 , 0x00},
	{0x95 , 0x02},
	{0x96 , 0xd0},	
	{0x97 , 0x05},
	{0x98 , 0x00},

    //// AWB   
    {0xfe , 0x00},
    {0xec , 0x02},
    {0xed , 0x04},
    {0xee , 0x60},
    {0xef , 0x90},
    {0xfe , 0x01},
    {0x74 , 0x01},
    //// AEC	  
    {0xfe , 0x01},
    {0x01 , 0x08},
    {0x02 , 0xc0},
    {0x03 , 0x04},
    {0x04 , 0x90},
    {0x05 , 0x30},
    {0x06 , 0x98},
    {0x07 , 0x28},
    {0x08 , 0x6c},
    {0x0a , 0xc2}, 
    {0x21 , 0x15}, //if 0xfa=11,then 0x21=15;else if 0xfa=00,then 0x21=14
    {0xfe , 0x00},
	ENDMARKER,
};

/* 1600*1200 UXGA */
static const struct regval_list module_uxga_regs[] = {
   {0xfe , 0x00},
    {0xfa , 0x11},
    {0xfd , 0x00},
    //// crop window
    {0xfe , 0x00},
    {0x99 , 0x11},  
    {0x9a , 0x06},
    {0x9b , 0x00},
    {0x9c , 0x00},
    {0x9d , 0x00},
    {0x9e , 0x00},
    {0x9f , 0x00},
    {0xa0 , 0x00},  
    {0xa1 , 0x00},
    {0xa2  ,0x00},
    
    {0x90 , 0x01},
    {0x91 , 0x00},
    {0x92 , 0x00},
    {0x93 , 0x00},
    {0x94 , 0x00},
    {0x95 , 0x04},
    {0x96 , 0xb0},
    {0x97 , 0x06},
    {0x98 , 0x40},

    //// AWB   
    {0xfe , 0x00},
    {0xec , 0x02},
    {0xed , 0x04},
    {0xee , 0x60},
    {0xef , 0x90},
    {0xfe , 0x01},
    {0x74 , 0x01},
    //// AEC	  
    {0xfe , 0x01},
    {0x01 , 0x08},
    {0x02 , 0xc0},
    {0x03 , 0x04},
    {0x04 , 0x90},
    {0x05 , 0x30},
    {0x06 , 0x98},
    {0x07 , 0x28},
    {0x08 , 0x6c},
    {0x0a , 0xc2}, 
    {0x21 , 0x15}, //if 0xfa=11,then 0x21=15;else if 0xfa=00,then 0x21=14
    {0xfe , 0x00},
  ENDMARKER,
};

static const struct regval_list module_init_auto_focus[] = {
    //  NULL
	ENDMARKER,
};
/*
 * window size list
 */

#if 0
/* 640X480 */
static struct camera_module_win_size module_win_vga = {
    .name             = "VGA",
    .width            = WIDTH_VGA,
    .height           = HEIGHT_VGA,
    .win_regs         = module_vga_regs,
    .frame_rate_array = frame_rate_vga,
};
#endif
/* 800X600 */
static struct camera_module_win_size module_win_svga = {
    .name             = "SVGA",
    .width            = WIDTH_SVGA,
    .height           = HEIGHT_SVGA,
    .win_regs         = module_svga_regs,

    .frame_rate_array = frame_rate_svga,
    .capture_only     = 0,
};

/* 1280X720 */
static struct camera_module_win_size module_win_720p = {
    .name             = "720P",
    .width            = WIDTH_720P,
    .height           = HEIGHT_720P,
    .win_regs         = module_720p_regs,
    .frame_rate_array = frame_rate_720p,
    .capture_only     = 0,
};

/* 1600X1200 */
static struct camera_module_win_size module_win_uxga = {
    .name             = "UXGA",
    .width            = WIDTH_UXGA,
    .height           = HEIGHT_UXGA,
    .win_regs         = module_uxga_regs,
    .frame_rate_array = frame_rate_uxga,
    .capture_only     = 1,
};

static struct camera_module_win_size *module_win_list[] = {
    //&module_win_vga,
    &module_win_svga,
    &module_win_720p,
    &module_win_uxga,
};

static struct regval_list module_whitebance_auto_regs[]=
{
    {0xfe, 0x00},
    {0xb3, 0x61},
    {0xb4, 0x40}, 
    {0xb5, 0x61},
    {0x82, 0xfe},
	ENDMARKER,
};

/* Cloudy Colour Temperature : 6500K - 8000K  */
static struct regval_list module_whitebance_cloudy_regs[]=
{

    {0xfe, 0x00},
    {0x82, 0xfc},
    {0xb3, 0x58},
    {0xb4, 0x40}, 
    {0xb5, 0x50},
	ENDMARKER,
};

/* ClearDay Colour Temperature : 5000K - 6500K  */
static struct regval_list module_whitebance_sunny_regs[]=
{
    {0xfe, 0x00},
    {0x82, 0xfc},
    {0xb3, 0x70},
    {0xb4, 0x40}, 
    {0xb5, 0x50},	
	ENDMARKER,
};

/* Office Colour Temperature : 3500K - 5000K ,荧光灯 */
static struct regval_list module_whitebance_fluorescent_regs[]=
{

    {0xfe, 0x00},
    {0x82, 0xfc},
    {0xb3, 0x72},
    {0xb4, 0x40}, 
    {0xb5, 0x5b},
	ENDMARKER,
};

/* Home Colour Temperature : 2500K - 3500K ，白炽灯 */
static struct regval_list module_whitebance_incandescent_regs[]=
{
    {0xfe, 0x00},
    {0x82, 0xfc},
    {0xb3, 0x50},
    {0xb4, 0x40},
    {0xb5, 0xa8}, 
	ENDMARKER,
};
#if 0
/*正常模式*/
static struct regval_list module_effect_normal_regs[] =
{
    {0xfe, 0x00},
    {0x83, 0xe0},
	ENDMARKER,
};

/*单色，黑白照片*/
static struct regval_list module_effect_white_black_regs[] =
{
    {0xfe, 0x00},
    {0x83, 0x12},
	ENDMARKER,
};

/*负片效果*/
static struct regval_list module_effect_negative_regs[] =
{
    //Negative
    {0xfe, 0x00},
    {0x83, 0x01},
	ENDMARKER,
};
/*复古效果*/
static struct regval_list module_effect_antique_regs[] =
{    
    {0xfe, 0x00},
    {0x83, 0x82},
	ENDMARKER,
};
#endif
static struct regval_list module_scene_auto_regs[] =
{
    {0xfe, 0x01},
    {0x3c, 0x40},
    {0xfe, 0x00},
	ENDMARKER,
};
#if 0
static struct regval_list module_scene_night_regs[] =
{
    {0xfe, 0x01},
    {0x3c, 0x60},
    {0xfe, 0x00},
	ENDMARKER,
};
#endif
static struct v4l2_ctl_cmd_info v4l2_ctl_array[] =
{
#if 0
    {	.id = V4L2_CID_GAIN, 
        .min = 256,
        .max = 0XFFFF,
        .step = 1,
        .def = 2560,},
    {	.id = V4L2_CID_AF_MODE,   //此项需置于数组头部
        .min = NONE_AF, 
        .max = CONTINUE_AF|SINGLE_AF, 
        .step = 1, 
        .def = CONTINUE_AF|SINGLE_AF,},
#endif
	{	.id = V4L2_CID_GAIN, 
			.min = 10, 
			.max = 2048, 
			.step = 1, 
			.def = 30,},
    {	.id = V4L2_CID_AUTO_WHITE_BALANCE, 
        .min = 0,
        .max = 1, 
        .step = 1, 
        .def = 1,},
    {	.id = V4L2_CID_WHITE_BALANCE_TEMPERATURE, 
        .min = 0, 
        .max = 3, 
        .step = 1, 
        .def = 1,},
       	{	.id   = V4L2_CID_FLASH_STROBE, 
		.min  = 0, 
		.max  = 1, 
		.step = 1, 
		.def  = 0,
	},
	
	{	.id   = V4L2_CID_FLASH_STROBE_STOP, 
		.min  = 0, 
		.max  = 1, 
		.step = 1, 
		.def  = 0,
	},
//    {	.id = V4L2_CID_SCENE_EXPOSURE, 
//        .min = 0, 
//        .max = 1, 
//        .step = 1, 
//        .def = 0,},//3.4内核没有定义此命令字
//    {	.id = V4L2_CID_PRIVATE_PREV_CAPT, 
//        .min = 0, 
//        .max = 1, 
//        .step = 1, 
//        .def = PREVIEW_MODE,},//3.4内核没有定义此命令字
#if 0
    {	.id = V4L2_CID_AF_STATUS, 
        .min = AF_STATUS_DISABLE, 
        .max = AF_STATUS_FAIL, 
        .step = 1, 
        .def = AF_STATUS_DISABLE,},
    {	.id = V4L2_CID_FLASH_STROBE, 
        .min = 0, 
        .max = 1, 
        .step = 1, 
        .def = 0,},
    {	.id = V4L2_CID_FLASH_STROBE_STOP, 
        .min = 0, 
        .max = 1, 
        .step = 1, 
        .def = 0,},
#endif
	{	.id = V4L2_CID_MIRRORFLIP, //3.10内核没有定义此命令字,同时写入vflip和hflip
		.min = NONE, 
		.max = HFLIP|VFLIP, 
		.step = 1, 
		.def = NONE,},
};

static struct v4l2_ctl_cmd_info_menu v4l2_ctl_array_menu[] =
{
    {	.id = V4L2_CID_COLORFX, 
        .max = 3, 
        .mask = 0x0, 
        .def = 0,},
    {	.id = V4L2_CID_EXPOSURE_AUTO, 
        .max = 1, 
        .mask = 0x0, 
        .def = 1,},
    {  
	   .id = V4L2_CID_SCENE_MODE, 
	   .max = V4L2_SCENE_MODE_TEXT, 
	   .mask = 0x0, 
	   .def = 0,
	},
#if 1
    {	.id = V4L2_CID_FLASH_LED_MODE, 
        .max = 3,
        .mask = 0x0,
        .def = 0,},
#endif
		{
	.id = V4L2_CID_POWER_LINE_FREQUENCY, 
	.max = V4L2_CID_POWER_LINE_FREQUENCY_AUTO, 
	.mask = 0x0,
	.def = V4L2_CID_POWER_LINE_FREQUENCY_AUTO,},
};

#endif /* __MODULE_DIFF_H__ */
