/*
 * module different macro
 *
 * Copyright (C) 2008 Renesas Solutions Corp.
 * Kuninori Morimoto <morimoto.kuninori@renesas.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __MODULE_DIFF_H__
#define __MODULE_DIFF_H__

#include "./../module_comm/module_comm.h"

#define CAMERA_MODULE_NAME 	"gc0329"
#define CAMERA_MODULE_PID		0xc0

#define MODULE_PLATFORM_ID		GC0329_PLATFORM_ID
#define MODULE_I2C_REAL_ADDRESS		(0x62>>1)
#define MODULE_I2C_REG_ADDRESS		(0x62>>1)
#define I2C_REGS_WIDTH			1
#define I2C_DATA_WIDTH			1

#define PID						0x00 /* Product ID Number H byte */

#define OUTTO_SENSO_CLOCK 		24000000

#define DEFAULT_VSYNC_ACTIVE_LEVEL		V4L2_MBUS_VSYNC_ACTIVE_LOW
 #define DEFAULT_PCLK_SAMPLE_EDGE      V4L2_MBUS_PCLK_SAMPLE_RISING
#define DEFAULT_POWER_LINE_FREQUENCY	V4L2_CID_POWER_LINE_FREQUENCY_50HZ

#define MODULE_DEFAULT_WIDTH	WIDTH_VGA
#define MODULE_DEFAULT_HEIGHT	HEIGHT_VGA
#define MODULE_MAX_WIDTH		WIDTH_VGA
#define MODULE_MAX_HEIGHT		HEIGHT_VGA

#define AHEAD_LINE_NUM			15    //10行 = 50次循环
#define DROP_NUM_CAPTURE		4
#define DROP_NUM_PREVIEW		4

static unsigned int frame_rate_qvga[] = {30,};
static unsigned int frame_rate_vga[]  = {30,};

static const struct regval_list module_init_regs[] =
{
   //TODO: add initial code here
	{0xfe, 0x80},
	{0xfe, 0x80},
	{0xfc, 0x16},
	{0xfc, 0x16},
	{0xfc, 0x16},
	{0xfc, 0x16},
	{0xfe, 0x00},  //page 0
	{0xf0, 0x07},
	{0xf1, 0x01},
	{0x73, 0x90},
	{0x74, 0x80},
	{0x75, 0x80},
	{0x76, 0x94},
	{0x42, 0x00},
	{0x77, 0x57},
	{0x78, 0x4d},
	{0x79, 0x45},
	//{0x42, 0xfc},
	////////////////////analog////////////////////
	{0x0a, 0x02},
	{0x0c, 0x02},
	{0x17, 0x14},  //0x16
	{0x19, 0x05},
	{0x1b, 0x24},
	{0x1c, 0x04},
	{0x1e, 0x08},
	{0x1f, 0xc8}, // 0XC0 update
	{0x20, 0x00},
	{0x21, 0x48},
	{0x22, 0xba},
	{0x23, 0x22},
	{0x24, 0x16},
	////////////////////blk////////////////////
	{0x26, 0xf7}, 
	{0x29, 0x80}, 
	{0x32, 0x04},
	{0x33, 0x20},
	{0x34, 0x20},
	{0x35, 0x20},
	{0x36, 0x20},
	////////////////////ISP BLOCK ENABL////////////////////
	{0x40, 0xff},
	{0x41, 0x46},
	{0x42, 0x7e},
	{0x44, 0xa0},  //a2  a0 a1
	{0x46, 0x02},
	{0x4b, 0xca},
	{0x4d, 0x01},
	{0x4f, 0x01},
	{0x70, 0x48},
	//{0xb0, 0x00},
	//{0xbc, 0x00},
	//{0xbd, 0x00},
	//{0xbe, 0x00},
	////////////////////DNDD////////////////////
	{0x80, 0xe7}, 
	{0x82, 0x55}, 
	{0x87, 0x4a},
	////////////////////INTPEE////////////////////
	{0x95, 0x45},
	////////////////////ASDE////////////////////
	//{0xfe, 0x01},
	//{0x18, 0x22},
	//{0xfe, 0x00},
	//{0x9c, 0x0a},
	//{0xa0, 0xaf},
	//{0xa2, 0xff},
	//{0xa4, 0x50},
	//{0xa5, 0x21},
	//{0xa7, 0x35},
	////////////////////RGB gamma////////////////////
	//RGB gamma m4'
	{0xbf, 0x06},
	{0xc0, 0x14},
	{0xc1, 0x27},
	{0xc2, 0x3b},
	{0xc3, 0x4f},
	{0xc4, 0x62},
	{0xc5, 0x72},
	{0xc6, 0x8d},
	{0xc7, 0xa4},
	{0xc8, 0xb8},
	{0xc9, 0xc9},
	{0xcA, 0xd6},
	{0xcB, 0xe0},
	{0xcC, 0xe8},
	{0xcD, 0xf4},
	{0xcE, 0xFc},
	{0xcF, 0xFF},
	//////////////////CC///////////////////
	{0xfe, 0x00},
	{0xb3, 0x44},
	{0xb4, 0xfd},
	{0xb5, 0x02},
	{0xb6, 0xfa},
	{0xb7, 0x48},
	{0xb8, 0xf0},
	// crop 						   
	{0x50, 0x01},
	////////////////////YCP////////////////////
	{0xfe, 0x00},
	{0xd1, 0x38},
	{0xd2, 0x38},
	{0xdd, 0x54},
	////////////////////AEC////////////////////
	{0xfe, 0x01},
	{0x10, 0x40},
	{0x11, 0x21},
	{0x12, 0x07},
	{0x13, 0x50},
	{0x17, 0x88},
	{0x21, 0xb0},
	{0x22, 0x48},
	{0x3c, 0x95},
	{0x3d, 0x50},
	{0x3e, 0x48}, 
	////////////////////AWB////////////////////
	{0xfe, 0x01},
	{0x06, 0x16},
	{0x07, 0x06},
	{0x08, 0x98},
	{0x09, 0xee},
	{0x50, 0xfc},
	{0x51, 0x20},
	{0x52, 0x0b},
	{0x53, 0x20},
	{0x54, 0x40},
	{0x55, 0x10},
	{0x56, 0x20},
	//{0x57, 0x40},
	{0x58, 0xa0},
	{0x59, 0x28},
	{0x5a, 0x02},
	{0x5b, 0x63},
	{0x5c, 0x34},
	{0x5d, 0x73},
	{0x5e, 0x11},
	{0x5f, 0x40},
	{0x60, 0x40},
	{0x61, 0xc8},
	{0x62, 0xa0},
	{0x63, 0x40},
	{0x64, 0x50},
	{0x65, 0x98},
	{0x66, 0xfa},
	{0x67, 0x70},
	{0x68, 0x58},
	{0x69, 0x85},
	{0x6a, 0x40},
	{0x6b, 0x39},
	{0x6c, 0x18},
	{0x6d, 0x28},
	{0x6e, 0x41},
	{0x70, 0x02},
	{0x71, 0x00},
	{0x72, 0x10},
	{0x73, 0x40},
	//{0x74, 0x32},
	//{0x75, 0x40},
	//{0x76, 0x30},
	//{0x77, 0x48},
	//{0x7a, 0x50},
	//{0x7b, 0x20}, 
	{0x80, 0x60},
	{0x81, 0x50},
	{0x82, 0x42},
	{0x83, 0x40},
	{0x84, 0x40},
	{0x85, 0x40},
	{0x74, 0x40},
	{0x75, 0x58},
	{0x76, 0x24},
	{0x77, 0x40},
	{0x78, 0x20},
	{0x79, 0x60},
	{0x7a, 0x58},
	{0x7b, 0x20},
	{0x7c, 0x30},
	{0x7d, 0x35},
	{0x7e, 0x10},
	{0x7f, 0x08},
	////////////////////ABS////////////////////
	{0x9c, 0x02}, 
	{0x9d, 0x20},
	//{0x9f, 0x40},	
	////////////////////CC-AWB////////////////////
	{0xd0, 0x00},
	{0xd2, 0x2c},
	{0xd3, 0x80}, 
	////////////////////LSC///////////////////
	{0xfe, 0x01},
	{0xa0, 0x00},
	{0xa1, 0x3c},
	{0xa2, 0x50},
	{0xa3, 0x00},
	{0xa8, 0x0f},
	{0xa9, 0x08},
	{0xaa, 0x00},
	{0xab, 0x04},
	{0xac, 0x00},
	{0xad, 0x07},
	{0xae, 0x0e},
	{0xaf, 0x00},
	{0xb0, 0x00},
	{0xb1, 0x09},
	{0xb2, 0x00},
	{0xb3, 0x00},
	{0xb4, 0x31},
	{0xb5, 0x19},
	{0xb6, 0x24},
	{0xba, 0x3a},
	{0xbb, 0x24},
	{0xbc, 0x2a},
	{0xc0, 0x17},
	{0xc1, 0x13},
	{0xc2, 0x17},
	{0xc6, 0x21},
	{0xc7, 0x1c},
	{0xc8, 0x1c},
	{0xb7, 0x00},
	{0xb8, 0x00},
	{0xb9, 0x00},
	{0xbd, 0x00},
	{0xbe, 0x00},
	{0xbf, 0x00},
	{0xc3, 0x00},
	{0xc4, 0x00},
	{0xc5, 0x00},
	{0xc9, 0x00},
	{0xca, 0x00},
	{0xcb, 0x00},
	{0xa4, 0x00},
	{0xa5, 0x00},
	{0xa6, 0x00},
	{0xa7, 0x00},
	{0xfe, 0x00},	
	////////////////////asde ///////////////////
	//{0xa0, 0xaf},
	//{0xa2, 0xff},
	{0x44, 0xa2},
	/////banding/////////
#if 1
	{0x05, 0x01}, 	
	{0x06, 0x32}, 
	{0x07, 0x00},
	{0x08, 0x70},
	{0xfe,0x01},
	{0x29, 0x00},   //anti-flicker step [11:8]
	{0x2a, 0x78},   //anti-flicker step [7:0]
	{0x2b, 0x02},   //exp level 0  14.28fps
	{0x2c, 0x58}, 
	{0x2d, 0x03},   //exp level 1  12.50fps
	{0x2e, 0x48}, 
	{0x2f, 0x04},   //exp level 2  10.00fps
	{0x30, 0xb0}, 
	{0x31, 0x05},   //exp level 3  7.14fps
	{0x32, 0xa0}, 
#else
	{0x05, 0x00}, 	
	{0x06, 0x6a}, 
	{0x07, 0x00},
	{0x08, 0x70},
	{0xfe,0x01},
	{0x29, 0x00},   //anti-flicker step [11:8]
	{0x2a, 0x96},   //anti-flicker step [7:0]
	{0x2b, 0x02},   //exp level 0  14.28fps
	{0x2c, 0x58}, 
	{0x2d, 0x02},   //exp level 1  12.50fps
	{0x2e, 0x58}, 
	{0x2f, 0x02},   //exp level 2  10.00fps
	{0x30, 0x58}, 
	{0x31, 0x02},   //exp level 3  7.14fps
	{0x32, 0x58}, 
#endif

	{0xfe,0x00},
	//effect
	{0x43 , 0x00},
	//wb
	{0x77, 0x57},
	{0x78, 0x4d},
	{0x79, 0x45},
	{0x42,0x7e},// awb on 

	/////20120427////
	{0xfe,0x01},
	{0x18,0x22},
	{0x21,0xc0},
	{0x06,0x12},
	{0x08,0x9c},
	{0x51,0x28},
	{0x52,0x10},
	{0x53,0x20},
	{0x54,0x40},
	{0x55,0x16},
	{0x56,0x30},
	{0x58,0x60},
	{0x59,0x08},
	{0x5c,0x35},
	{0x5d,0x72},
	{0x67,0x80},
	{0x68,0x60},
	{0x69,0x90},
	{0x6c,0x30},
	{0x6d,0x60},
	{0x70,0x10},

	{0xfe,0x00},
	{0x9c,0x0a},
	{0xa0,0xaf},
	{0xa2,0xff},
	{0xa4,0x60},
	{0xa5,0x31},
	{0xa7,0x35},
	{0x42,0xfe},
	{0xd1,0x34},
	{0xd2,0x34},
	{0xfe,0x00},
   // Reg[0x1f] , 从0xc0 改为0xc8;  
	ENDMARKER,	
};

/* 320*240: QVGA*/
static const struct regval_list module_qvga_regs[] = {
	
    { 0xfe, 0x00 },
    { 0x4b, 0xca },
    { 0x50, 0x01 },
    { 0x51, 0x00 },
    { 0x52, 0x00 },
    { 0x53, 0x00 },
    { 0x54, 0x00 },
    { 0x55, 0x00 },
    { 0x56, 0xf0 },  
    { 0x57, 0x01 },
    { 0x58, 0x40 },
    
    { 0x59, 0x22 },  
    { 0x5a, 0x03 },
    { 0x5b, 0x00 },
    { 0x5c, 0x00 },
    { 0x5d, 0x00 },
    { 0x5e, 0x00 },
    { 0x5f, 0x00 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x62, 0x00 },
	ENDMARKER,
};

/* 640*480: VGA*/
static const struct regval_list module_vga_regs[] = {
	 { 0xfe, 0x00 },
    { 0x4b, 0xcb },
    { 0x50, 0x01 },
    { 0x51, 0x00 },
    { 0x52, 0x00 },
    { 0x53, 0x00 },
    { 0x54, 0x00 },
    { 0x55, 0x01 },
    { 0x56, 0xe0 },  
    { 0x57, 0x02 },
    { 0x58, 0x80 },
    
    { 0x59, 0x11 },  
    { 0x5a, 0x0e },
    { 0x5b, 0x00 },
    { 0x5c, 0x00 },
    { 0x5d, 0x00 },
    { 0x5e, 0x00 },
    { 0x5f, 0x00 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x62, 0x00 },
    { 0x4c, 0x00 },
	ENDMARKER,
};

static const struct regval_list module_init_auto_focus[] = {
	ENDMARKER,
//  NULL
};

/*
 * window size list
 */
/* 320X240 */
static struct camera_module_win_size module_win_qvga = {
	.name             = "QVGA",
	.width            = WIDTH_QVGA,
	.height           = HEIGHT_QVGA,
	.win_regs         = module_qvga_regs,
	.frame_rate_array = frame_rate_qvga,
	.capture_only     = 0,
};

/* 640X480 */
static struct camera_module_win_size module_win_vga = {
	.name             = "VGA",
	.width            = WIDTH_VGA,
	.height           = HEIGHT_VGA,
	.win_regs         = module_vga_regs,
	.frame_rate_array = frame_rate_vga,
	.capture_only     = 0,
};

static struct camera_module_win_size *module_win_list[] = {
	&module_win_qvga,
	&module_win_vga,
};

static struct regval_list module_whitebance_auto_regs[]=
{
     {0x42, 0xfe},
    {0x77, 0x57},
    {0x78, 0x4d},
    {0x79, 0x45},
	ENDMARKER,
};

/* Cloudy Colour Temperature : 6500K - 8000K  */
static struct regval_list module_whitebance_cloudy_regs[]=
{
  {0x42, 0xfd},
    {0x77, 0x5a},
    {0x78, 0x42},
    {0x79, 0x40},
	ENDMARKER,
};

/* ClearDay Colour Temperature : 5000K - 6500K  */
static struct regval_list module_whitebance_sunny_regs[]=
{
   {0x42, 0xfd},
    {0x77, 0x50},
    {0x78, 0x45},
    {0x79, 0x40},
	ENDMARKER,	
};

/* Office Colour Temperature : 3500K - 5000K ,荧光灯 */
static struct regval_list module_whitebance_fluorescent_regs[]=
{
    {0x42, 0xfd},
    {0x77, 0x40},
    {0x78, 0x42},
    {0x79, 0x50},
	ENDMARKER,
};

/* Home Colour Temperature : 2500K - 3500K ，白炽灯 */
static struct regval_list module_whitebance_incandescent_regs[]=
{
     {0x42, 0xfd},
    {0x77, 0x48},
    {0x78, 0x40},
    {0x79, 0x5c},
	ENDMARKER,
};

static struct regval_list module_scene_auto_regs[] =
{
  {0x42, 0xfe},
    {0x77, 0x57},
    {0x78, 0x4d},
    {0x79, 0x45},
	ENDMARKER,
};

static struct v4l2_ctl_cmd_info v4l2_ctl_array[] =
{

	{	.id = V4L2_CID_AUTO_WHITE_BALANCE, 
		.min = 0,
		.max = 1, 
		.step = 1, 
		.def = 1,},
	{	.id = V4L2_CID_WHITE_BALANCE_TEMPERATURE, 
		.min = 0, 
		.max = 3, 
		.step = 1, 
		.def = 1,},
	{	.id   = V4L2_CID_GAIN, 
		.min  = 10,
		.max  = 0xffff,
		.step = 1,
		.def  = 0x00,},
	{	.id   = V4L2_CID_FLASH_STROBE, 
		.min  = 0, 
		.max  = 1, 
		.step = 1, 
		.def  = 0,
	},
	
	{	.id   = V4L2_CID_FLASH_STROBE_STOP, 
		.min  = 0, 
		.max  = 1, 
		.step = 1, 
		.def  = 0,
	},

	{	.id = V4L2_CID_MIRRORFLIP, //3.10内核没有定义此命令字,同时写入vflip和hflip
		.min = NONE, 
		.max = HFLIP|VFLIP, 
		.step = 1, 
		.def = NONE,},
};

static struct v4l2_ctl_cmd_info_menu v4l2_ctl_array_menu[] =
{
	{	.id = V4L2_CID_COLORFX, 
		.max = 3, 
		.mask = 0x0, 
		.def = 0,},
	{	.id = V4L2_CID_EXPOSURE_AUTO, 
		.max = 1, 
		.mask = 0x0, 
		.def = 1,},
	{	.id = V4L2_CID_FLASH_LED_MODE, 
		.max = 3,
		.mask = 0x0,
		.def = 0,},
	{  
	   .id = V4L2_CID_SCENE_MODE, 
	   .max = V4L2_SCENE_MODE_TEXT, 
	   .mask = 0x0, 
	   .def = 0,
	},
	{
	.id = V4L2_CID_POWER_LINE_FREQUENCY, 
	.max = V4L2_CID_POWER_LINE_FREQUENCY_AUTO, 
	.mask = 0x0,
	.def = V4L2_CID_POWER_LINE_FREQUENCY_AUTO,},

};


#endif /* __MODULE_DIFF_H__ */
